.TH MAN 3 "26-10-2020" "0.1" "Library Functions Manual"

.SH NAME
.B _printf
- custom version for printf function.

.SH SYNOPSIS
.SH ""

#include "holberton.h"

Int _printf(const char *[FORMAT], â€¦);

.SH DESCRIPTION
.SH ""

The printf function sends formatted output to stdout.
A custom _printf() for learning purposes was developed by cohorte #10 Alejandra Higuera and Paola Carrero.
_printf() function formart string, beginning and ending in its initial shift state, if any.
These arguments are placed using the percentage "%" operator

.SS Compilation

.P
.RS
#include "holberton.h"

$ gcc -Wall -Werror -Wextra -pedantic -Wno-format *.c
.RE

.SS Printing
.RS

Int _printf(const char *[FORMAT],...);

FORMAT is the string that takes n specifier followed by a "%" symbol. i.e. "Hello this is %s form %d cohort". (...) is the variadic function, (n) number of arguments

.SS Example

.RS

.B Input
.PP 
_printf("Hello this is %s form %d cohort\\n\\", 33);
.PP
.B Output
.PP
Hello this is %s from %d cohort
.RE

.SS Return Value

Return value is a n number of characters except NULL

.RS
Current arguments handled by conversion specifiers:

.IT
.B  %
- % symbols is set without argument and conversion specification has to be "%%".

.IT
.B c
- integer or char argument converted to unsigned char.

.IT
.B s
- string argument. _printf handles s conversion specifier if the argument value

.RE

.P

.SH "AUTHORS"
.SH ""

Alejandra Higuera and Paola Carrero
